server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    # Modify certificates location before creating !!symbolic link!!
    ssl_certificate /home/ramzi/Documents/GitHub/csc648-02-sp21-Team01/credentials/SSL_Keys/cert.pem;
    ssl_certificate_key /home/ramzi/Documents/GitHub/csc648-02-sp21-Team01/credentials/SSL_Keys/priv-key.pem;
    ssl_ciphers HIGH:!aNULL:!MD5;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    
    # proxy_cache SkillSeek_cache; #setup cache
    # proxy_cache_bypass  $http_cache_control;
    # add_header X-Proxy-Cache $upstream_cache_status;
    
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme; 
    proxy_set_header X-NginX-Proxy true;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
        

    # Modify IP address to AWS Server address
    server_name 192.168.1.24;

    location / {
        # Change root
        root /home/ramzi/Documents/GitHub/csc648-02-sp21-Team01/application/;
        expires 60m;
        
        # Return static files if they exist;        
        try_files $uri @proxy;
    }

    location @proxy {
        
        # proxy_cache_bypass $http_upgrade; # Bypass cache
        proxy_pass http://localhost:3000;
        proxy_redirect off;
    }
}